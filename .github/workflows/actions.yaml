name: github Actions
on: push
jobs:
  sanity-server-container-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: building sanity container
        run: docker build -t sanity-server.${{ GITHUB_RUN_NUMBER }} -f Dockerfile.sanityserver .
      
      - name: pushing sanity container to ECR
        run: docker push ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.us-east-1.amazonaws.com/sanity-server:sanity-server:${{ GITHUB_RUN_NUMBER }}

  terraform-sanity-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: terraform init
        working-directory: ./Terraform
        run: |
          echo "** Running Terraform Init**"
          terraform init

          echo "** Running Terraform Validate**"
          terraform validate

          echo "** Running Terraform Plan**"
          terraform plan

          echo "** Running Terraform Apply**"
          terraform apply -auto-approve
        
      - name: terraform apply
        working-directory: ./Terraform
        run: terraform apply

# create new instances using terraform or cloudformation?
# ssh into new instances
# clone down specific branch
# start the node server
