name: github Actions
on: push
jobs:

  # Builds sanity server docker container and pushes to ECR
  sanity-server-container-build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: building sanity container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sanity_server
          IMAGE_TAG: 1.0.${{ github.run_number }}
        
        run: | 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.sanityserver .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # Uses terraform to spin up sanity studio server instance
  terraform-sanity-server:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: terraform init
        working-directory: ./Terraform
        run: |
          echo "** Running Terraform Init**"
          terraform init

          echo "** Running Terraform Validate**"
          terraform validate

          echo "** Running Terraform Plan**"
          terraform plan

          echo "** Running Terraform Apply**"
          terraform apply -auto-approve -var="instance_name=sanity-studio-server"
        
      - name: terraform apply
        working-directory: ./Terraform
        run: terraform apply

# steps if branch name is not 'main'
# terraform to create guest instance
# build + push guest server container
# start guest server container